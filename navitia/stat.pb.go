// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stat.proto

package pbnavitia

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StatParameter struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StatParameter) Reset()                    { *m = StatParameter{} }
func (m *StatParameter) String() string            { return proto.CompactTextString(m) }
func (*StatParameter) ProtoMessage()               {}
func (*StatParameter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *StatParameter) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *StatParameter) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Filter struct {
	Object           *string `protobuf:"bytes,1,opt,name=object" json:"object,omitempty"`
	Attribute        *string `protobuf:"bytes,2,opt,name=attribute" json:"attribute,omitempty"`
	Operator         *string `protobuf:"bytes,3,opt,name=operator" json:"operator,omitempty"`
	Value            *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Filter) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *Filter) GetAttribute() string {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return ""
}

func (m *Filter) GetOperator() string {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return ""
}

func (m *Filter) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type InterpretedParameter struct {
	Key              *string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Filters          []*Filter `protobuf:"bytes,3,rep,name=filters" json:"filters,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *InterpretedParameter) Reset()                    { *m = InterpretedParameter{} }
func (m *InterpretedParameter) String() string            { return proto.CompactTextString(m) }
func (*InterpretedParameter) ProtoMessage()               {}
func (*InterpretedParameter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *InterpretedParameter) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *InterpretedParameter) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *InterpretedParameter) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type StatError struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StatError) Reset()                    { *m = StatError{} }
func (m *StatError) String() string            { return proto.CompactTextString(m) }
func (*StatError) ProtoMessage()               {}
func (*StatError) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *StatError) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *StatError) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type StatCoverage struct {
	RegionId         *string `protobuf:"bytes,1,opt,name=region_id" json:"region_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StatCoverage) Reset()                    { *m = StatCoverage{} }
func (m *StatCoverage) String() string            { return proto.CompactTextString(m) }
func (*StatCoverage) ProtoMessage()               {}
func (*StatCoverage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *StatCoverage) GetRegionId() string {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return ""
}

type StatRequest struct {
	// POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC)
	RequestDate           *uint64                 `protobuf:"varint,1,opt,name=request_date" json:"request_date,omitempty"`
	UserId                *int32                  `protobuf:"varint,2,opt,name=user_id" json:"user_id,omitempty"`
	UserName              *string                 `protobuf:"bytes,3,opt,name=user_name" json:"user_name,omitempty"`
	ApplicationId         *int32                  `protobuf:"varint,4,opt,name=application_id" json:"application_id,omitempty"`
	ApplicationName       *string                 `protobuf:"bytes,5,opt,name=application_name" json:"application_name,omitempty"`
	RequestDuration       *int32                  `protobuf:"varint,6,opt,name=request_duration" json:"request_duration,omitempty"`
	Api                   *string                 `protobuf:"bytes,7,opt,name=api" json:"api,omitempty"`
	Path                  *string                 `protobuf:"bytes,8,opt,name=path" json:"path,omitempty"`
	Host                  *string                 `protobuf:"bytes,10,opt,name=host" json:"host,omitempty"`
	ResponseSize          *int32                  `protobuf:"varint,11,opt,name=response_size" json:"response_size,omitempty"`
	Client                *string                 `protobuf:"bytes,12,opt,name=client" json:"client,omitempty"`
	Coverages             []*StatCoverage         `protobuf:"bytes,13,rep,name=coverages" json:"coverages,omitempty"`
	Parameters            []*StatParameter        `protobuf:"bytes,14,rep,name=parameters" json:"parameters,omitempty"`
	Error                 *StatError              `protobuf:"bytes,15,opt,name=error" json:"error,omitempty"`
	Journeys              []*StatJourneyResponse  `protobuf:"bytes,16,rep,name=journeys" json:"journeys,omitempty"`
	InterpretedParameters []*InterpretedParameter `protobuf:"bytes,17,rep,name=interpreted_parameters" json:"interpreted_parameters,omitempty"`
	JourneyRequest        *JourneyRequest         `protobuf:"bytes,18,opt,name=journey_request" json:"journey_request,omitempty"`
	EndPointId            *int32                  `protobuf:"varint,19,opt,name=end_point_id" json:"end_point_id,omitempty"`
	EndPointName          *string                 `protobuf:"bytes,20,opt,name=end_point_name" json:"end_point_name,omitempty"`
	InfoResponse          *StatInfoResponse       `protobuf:"bytes,21,opt,name=info_response" json:"info_response,omitempty"`
	Token                 *string                 `protobuf:"bytes,22,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized      []byte                  `json:"-"`
}

func (m *StatRequest) Reset()                    { *m = StatRequest{} }
func (m *StatRequest) String() string            { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()               {}
func (*StatRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *StatRequest) GetRequestDate() uint64 {
	if m != nil && m.RequestDate != nil {
		return *m.RequestDate
	}
	return 0
}

func (m *StatRequest) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *StatRequest) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *StatRequest) GetApplicationId() int32 {
	if m != nil && m.ApplicationId != nil {
		return *m.ApplicationId
	}
	return 0
}

func (m *StatRequest) GetApplicationName() string {
	if m != nil && m.ApplicationName != nil {
		return *m.ApplicationName
	}
	return ""
}

func (m *StatRequest) GetRequestDuration() int32 {
	if m != nil && m.RequestDuration != nil {
		return *m.RequestDuration
	}
	return 0
}

func (m *StatRequest) GetApi() string {
	if m != nil && m.Api != nil {
		return *m.Api
	}
	return ""
}

func (m *StatRequest) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *StatRequest) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *StatRequest) GetResponseSize() int32 {
	if m != nil && m.ResponseSize != nil {
		return *m.ResponseSize
	}
	return 0
}

func (m *StatRequest) GetClient() string {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return ""
}

func (m *StatRequest) GetCoverages() []*StatCoverage {
	if m != nil {
		return m.Coverages
	}
	return nil
}

func (m *StatRequest) GetParameters() []*StatParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *StatRequest) GetError() *StatError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StatRequest) GetJourneys() []*StatJourneyResponse {
	if m != nil {
		return m.Journeys
	}
	return nil
}

func (m *StatRequest) GetInterpretedParameters() []*InterpretedParameter {
	if m != nil {
		return m.InterpretedParameters
	}
	return nil
}

func (m *StatRequest) GetJourneyRequest() *JourneyRequest {
	if m != nil {
		return m.JourneyRequest
	}
	return nil
}

func (m *StatRequest) GetEndPointId() int32 {
	if m != nil && m.EndPointId != nil {
		return *m.EndPointId
	}
	return 0
}

func (m *StatRequest) GetEndPointName() string {
	if m != nil && m.EndPointName != nil {
		return *m.EndPointName
	}
	return ""
}

func (m *StatRequest) GetInfoResponse() *StatInfoResponse {
	if m != nil {
		return m.InfoResponse
	}
	return nil
}

func (m *StatRequest) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type JourneyRequest struct {
	// POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC)
	RequestedDateTime  *uint64 `protobuf:"varint,1,req,name=requested_date_time" json:"requested_date_time,omitempty"`
	Clockwise          *bool   `protobuf:"varint,2,req,name=clockwise" json:"clockwise,omitempty"`
	DepartureInsee     *string `protobuf:"bytes,3,opt,name=departure_insee" json:"departure_insee,omitempty"`
	DepartureAdmin     *string `protobuf:"bytes,4,opt,name=departure_admin" json:"departure_admin,omitempty"`
	ArrivalInsee       *string `protobuf:"bytes,5,opt,name=arrival_insee" json:"arrival_insee,omitempty"`
	ArrivalAdmin       *string `protobuf:"bytes,6,opt,name=arrival_admin" json:"arrival_admin,omitempty"`
	DepartureAdminName *string `protobuf:"bytes,7,opt,name=departure_admin_name" json:"departure_admin_name,omitempty"`
	ArrivalAdminName   *string `protobuf:"bytes,8,opt,name=arrival_admin_name" json:"arrival_admin_name,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *JourneyRequest) Reset()                    { *m = JourneyRequest{} }
func (m *JourneyRequest) String() string            { return proto.CompactTextString(m) }
func (*JourneyRequest) ProtoMessage()               {}
func (*JourneyRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *JourneyRequest) GetRequestedDateTime() uint64 {
	if m != nil && m.RequestedDateTime != nil {
		return *m.RequestedDateTime
	}
	return 0
}

func (m *JourneyRequest) GetClockwise() bool {
	if m != nil && m.Clockwise != nil {
		return *m.Clockwise
	}
	return false
}

func (m *JourneyRequest) GetDepartureInsee() string {
	if m != nil && m.DepartureInsee != nil {
		return *m.DepartureInsee
	}
	return ""
}

func (m *JourneyRequest) GetDepartureAdmin() string {
	if m != nil && m.DepartureAdmin != nil {
		return *m.DepartureAdmin
	}
	return ""
}

func (m *JourneyRequest) GetArrivalInsee() string {
	if m != nil && m.ArrivalInsee != nil {
		return *m.ArrivalInsee
	}
	return ""
}

func (m *JourneyRequest) GetArrivalAdmin() string {
	if m != nil && m.ArrivalAdmin != nil {
		return *m.ArrivalAdmin
	}
	return ""
}

func (m *JourneyRequest) GetDepartureAdminName() string {
	if m != nil && m.DepartureAdminName != nil {
		return *m.DepartureAdminName
	}
	return ""
}

func (m *JourneyRequest) GetArrivalAdminName() string {
	if m != nil && m.ArrivalAdminName != nil {
		return *m.ArrivalAdminName
	}
	return ""
}

type StatJourneyResponse struct {
	RequestedDateTime *uint64               `protobuf:"varint,1,opt,name=requested_date_time" json:"requested_date_time,omitempty"`
	DepartureDateTime *uint64               `protobuf:"varint,2,opt,name=departure_date_time" json:"departure_date_time,omitempty"`
	ArrivalDateTime   *uint64               `protobuf:"varint,3,opt,name=arrival_date_time" json:"arrival_date_time,omitempty"`
	Duration          *int32                `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	NbTransfers       *int32                `protobuf:"varint,5,opt,name=nb_transfers" json:"nb_transfers,omitempty"`
	Type              *string               `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	Sections          []*StatJourneySection `protobuf:"bytes,7,rep,name=sections" json:"sections,omitempty"`
	FirstPtId         *string               `protobuf:"bytes,8,opt,name=first_pt_id" json:"first_pt_id,omitempty"`
	FirstPtName       *string               `protobuf:"bytes,9,opt,name=first_pt_name" json:"first_pt_name,omitempty"`
	FirstPtCoord      *GeographicalCoord    `protobuf:"bytes,10,opt,name=first_pt_coord" json:"first_pt_coord,omitempty"`
	FirstPtAdminId    *string               `protobuf:"bytes,11,opt,name=first_pt_admin_id" json:"first_pt_admin_id,omitempty"`
	FirstPtAdminName  *string               `protobuf:"bytes,12,opt,name=first_pt_admin_name" json:"first_pt_admin_name,omitempty"`
	FirstPtAdminInsee *string               `protobuf:"bytes,13,opt,name=first_pt_admin_insee" json:"first_pt_admin_insee,omitempty"`
	LastPtId          *string               `protobuf:"bytes,14,opt,name=last_pt_id" json:"last_pt_id,omitempty"`
	LastPtName        *string               `protobuf:"bytes,15,opt,name=last_pt_name" json:"last_pt_name,omitempty"`
	LastPtCoord       *GeographicalCoord    `protobuf:"bytes,16,opt,name=last_pt_coord" json:"last_pt_coord,omitempty"`
	LastPtAdminId     *string               `protobuf:"bytes,17,opt,name=last_pt_admin_id" json:"last_pt_admin_id,omitempty"`
	LastPtAdminName   *string               `protobuf:"bytes,18,opt,name=last_pt_admin_name" json:"last_pt_admin_name,omitempty"`
	LastPtAdminInsee  *string               `protobuf:"bytes,19,opt,name=last_pt_admin_insee" json:"last_pt_admin_insee,omitempty"`
	XXX_unrecognized  []byte                `json:"-"`
}

func (m *StatJourneyResponse) Reset()                    { *m = StatJourneyResponse{} }
func (m *StatJourneyResponse) String() string            { return proto.CompactTextString(m) }
func (*StatJourneyResponse) ProtoMessage()               {}
func (*StatJourneyResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *StatJourneyResponse) GetRequestedDateTime() uint64 {
	if m != nil && m.RequestedDateTime != nil {
		return *m.RequestedDateTime
	}
	return 0
}

func (m *StatJourneyResponse) GetDepartureDateTime() uint64 {
	if m != nil && m.DepartureDateTime != nil {
		return *m.DepartureDateTime
	}
	return 0
}

func (m *StatJourneyResponse) GetArrivalDateTime() uint64 {
	if m != nil && m.ArrivalDateTime != nil {
		return *m.ArrivalDateTime
	}
	return 0
}

func (m *StatJourneyResponse) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *StatJourneyResponse) GetNbTransfers() int32 {
	if m != nil && m.NbTransfers != nil {
		return *m.NbTransfers
	}
	return 0
}

func (m *StatJourneyResponse) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StatJourneyResponse) GetSections() []*StatJourneySection {
	if m != nil {
		return m.Sections
	}
	return nil
}

func (m *StatJourneyResponse) GetFirstPtId() string {
	if m != nil && m.FirstPtId != nil {
		return *m.FirstPtId
	}
	return ""
}

func (m *StatJourneyResponse) GetFirstPtName() string {
	if m != nil && m.FirstPtName != nil {
		return *m.FirstPtName
	}
	return ""
}

func (m *StatJourneyResponse) GetFirstPtCoord() *GeographicalCoord {
	if m != nil {
		return m.FirstPtCoord
	}
	return nil
}

func (m *StatJourneyResponse) GetFirstPtAdminId() string {
	if m != nil && m.FirstPtAdminId != nil {
		return *m.FirstPtAdminId
	}
	return ""
}

func (m *StatJourneyResponse) GetFirstPtAdminName() string {
	if m != nil && m.FirstPtAdminName != nil {
		return *m.FirstPtAdminName
	}
	return ""
}

func (m *StatJourneyResponse) GetFirstPtAdminInsee() string {
	if m != nil && m.FirstPtAdminInsee != nil {
		return *m.FirstPtAdminInsee
	}
	return ""
}

func (m *StatJourneyResponse) GetLastPtId() string {
	if m != nil && m.LastPtId != nil {
		return *m.LastPtId
	}
	return ""
}

func (m *StatJourneyResponse) GetLastPtName() string {
	if m != nil && m.LastPtName != nil {
		return *m.LastPtName
	}
	return ""
}

func (m *StatJourneyResponse) GetLastPtCoord() *GeographicalCoord {
	if m != nil {
		return m.LastPtCoord
	}
	return nil
}

func (m *StatJourneyResponse) GetLastPtAdminId() string {
	if m != nil && m.LastPtAdminId != nil {
		return *m.LastPtAdminId
	}
	return ""
}

func (m *StatJourneyResponse) GetLastPtAdminName() string {
	if m != nil && m.LastPtAdminName != nil {
		return *m.LastPtAdminName
	}
	return ""
}

func (m *StatJourneyResponse) GetLastPtAdminInsee() string {
	if m != nil && m.LastPtAdminInsee != nil {
		return *m.LastPtAdminInsee
	}
	return ""
}

type StatJourneySection struct {
	DepartureDateTime  *uint64            `protobuf:"varint,1,opt,name=departure_date_time" json:"departure_date_time,omitempty"`
	ArrivalDateTime    *uint64            `protobuf:"varint,2,opt,name=arrival_date_time" json:"arrival_date_time,omitempty"`
	Duration           *int32             `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	Type               *string            `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Mode               *string            `protobuf:"bytes,5,opt,name=mode" json:"mode,omitempty"`
	FromEmbeddedType   *string            `protobuf:"bytes,6,opt,name=from_embedded_type" json:"from_embedded_type,omitempty"`
	FromId             *string            `protobuf:"bytes,7,opt,name=from_id" json:"from_id,omitempty"`
	FromName           *string            `protobuf:"bytes,8,opt,name=from_name" json:"from_name,omitempty"`
	FromCoord          *GeographicalCoord `protobuf:"bytes,9,opt,name=from_coord" json:"from_coord,omitempty"`
	FromAdminId        *string            `protobuf:"bytes,10,opt,name=from_admin_id" json:"from_admin_id,omitempty"`
	FromAdminName      *string            `protobuf:"bytes,11,opt,name=from_admin_name" json:"from_admin_name,omitempty"`
	ToEmbeddedType     *string            `protobuf:"bytes,12,opt,name=to_embedded_type" json:"to_embedded_type,omitempty"`
	ToId               *string            `protobuf:"bytes,13,opt,name=to_id" json:"to_id,omitempty"`
	ToName             *string            `protobuf:"bytes,14,opt,name=to_name" json:"to_name,omitempty"`
	ToCoord            *GeographicalCoord `protobuf:"bytes,15,opt,name=to_coord" json:"to_coord,omitempty"`
	ToAdminId          *string            `protobuf:"bytes,16,opt,name=to_admin_id" json:"to_admin_id,omitempty"`
	ToAdminName        *string            `protobuf:"bytes,17,opt,name=to_admin_name" json:"to_admin_name,omitempty"`
	VehicleJourneyId   *string            `protobuf:"bytes,18,opt,name=vehicle_journey_id" json:"vehicle_journey_id,omitempty"`
	LineId             *string            `protobuf:"bytes,19,opt,name=line_id" json:"line_id,omitempty"`
	LineCode           *string            `protobuf:"bytes,20,opt,name=line_code" json:"line_code,omitempty"`
	RouteId            *string            `protobuf:"bytes,21,opt,name=route_id" json:"route_id,omitempty"`
	NetworkId          *string            `protobuf:"bytes,22,opt,name=network_id" json:"network_id,omitempty"`
	NetworkName        *string            `protobuf:"bytes,23,opt,name=network_name" json:"network_name,omitempty"`
	PhysicalModeId     *string            `protobuf:"bytes,24,opt,name=physical_mode_id" json:"physical_mode_id,omitempty"`
	PhysicalModeName   *string            `protobuf:"bytes,25,opt,name=physical_mode_name" json:"physical_mode_name,omitempty"`
	CommercialModeId   *string            `protobuf:"bytes,26,opt,name=commercial_mode_id" json:"commercial_mode_id,omitempty"`
	CommercialModeName *string            `protobuf:"bytes,27,opt,name=commercial_mode_name" json:"commercial_mode_name,omitempty"`
	FromAdminInsee     *string            `protobuf:"bytes,28,opt,name=from_admin_insee" json:"from_admin_insee,omitempty"`
	ToAdminInsee       *string            `protobuf:"bytes,29,opt,name=to_admin_insee" json:"to_admin_insee,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *StatJourneySection) Reset()                    { *m = StatJourneySection{} }
func (m *StatJourneySection) String() string            { return proto.CompactTextString(m) }
func (*StatJourneySection) ProtoMessage()               {}
func (*StatJourneySection) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *StatJourneySection) GetDepartureDateTime() uint64 {
	if m != nil && m.DepartureDateTime != nil {
		return *m.DepartureDateTime
	}
	return 0
}

func (m *StatJourneySection) GetArrivalDateTime() uint64 {
	if m != nil && m.ArrivalDateTime != nil {
		return *m.ArrivalDateTime
	}
	return 0
}

func (m *StatJourneySection) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *StatJourneySection) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StatJourneySection) GetMode() string {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return ""
}

func (m *StatJourneySection) GetFromEmbeddedType() string {
	if m != nil && m.FromEmbeddedType != nil {
		return *m.FromEmbeddedType
	}
	return ""
}

func (m *StatJourneySection) GetFromId() string {
	if m != nil && m.FromId != nil {
		return *m.FromId
	}
	return ""
}

func (m *StatJourneySection) GetFromName() string {
	if m != nil && m.FromName != nil {
		return *m.FromName
	}
	return ""
}

func (m *StatJourneySection) GetFromCoord() *GeographicalCoord {
	if m != nil {
		return m.FromCoord
	}
	return nil
}

func (m *StatJourneySection) GetFromAdminId() string {
	if m != nil && m.FromAdminId != nil {
		return *m.FromAdminId
	}
	return ""
}

func (m *StatJourneySection) GetFromAdminName() string {
	if m != nil && m.FromAdminName != nil {
		return *m.FromAdminName
	}
	return ""
}

func (m *StatJourneySection) GetToEmbeddedType() string {
	if m != nil && m.ToEmbeddedType != nil {
		return *m.ToEmbeddedType
	}
	return ""
}

func (m *StatJourneySection) GetToId() string {
	if m != nil && m.ToId != nil {
		return *m.ToId
	}
	return ""
}

func (m *StatJourneySection) GetToName() string {
	if m != nil && m.ToName != nil {
		return *m.ToName
	}
	return ""
}

func (m *StatJourneySection) GetToCoord() *GeographicalCoord {
	if m != nil {
		return m.ToCoord
	}
	return nil
}

func (m *StatJourneySection) GetToAdminId() string {
	if m != nil && m.ToAdminId != nil {
		return *m.ToAdminId
	}
	return ""
}

func (m *StatJourneySection) GetToAdminName() string {
	if m != nil && m.ToAdminName != nil {
		return *m.ToAdminName
	}
	return ""
}

func (m *StatJourneySection) GetVehicleJourneyId() string {
	if m != nil && m.VehicleJourneyId != nil {
		return *m.VehicleJourneyId
	}
	return ""
}

func (m *StatJourneySection) GetLineId() string {
	if m != nil && m.LineId != nil {
		return *m.LineId
	}
	return ""
}

func (m *StatJourneySection) GetLineCode() string {
	if m != nil && m.LineCode != nil {
		return *m.LineCode
	}
	return ""
}

func (m *StatJourneySection) GetRouteId() string {
	if m != nil && m.RouteId != nil {
		return *m.RouteId
	}
	return ""
}

func (m *StatJourneySection) GetNetworkId() string {
	if m != nil && m.NetworkId != nil {
		return *m.NetworkId
	}
	return ""
}

func (m *StatJourneySection) GetNetworkName() string {
	if m != nil && m.NetworkName != nil {
		return *m.NetworkName
	}
	return ""
}

func (m *StatJourneySection) GetPhysicalModeId() string {
	if m != nil && m.PhysicalModeId != nil {
		return *m.PhysicalModeId
	}
	return ""
}

func (m *StatJourneySection) GetPhysicalModeName() string {
	if m != nil && m.PhysicalModeName != nil {
		return *m.PhysicalModeName
	}
	return ""
}

func (m *StatJourneySection) GetCommercialModeId() string {
	if m != nil && m.CommercialModeId != nil {
		return *m.CommercialModeId
	}
	return ""
}

func (m *StatJourneySection) GetCommercialModeName() string {
	if m != nil && m.CommercialModeName != nil {
		return *m.CommercialModeName
	}
	return ""
}

func (m *StatJourneySection) GetFromAdminInsee() string {
	if m != nil && m.FromAdminInsee != nil {
		return *m.FromAdminInsee
	}
	return ""
}

func (m *StatJourneySection) GetToAdminInsee() string {
	if m != nil && m.ToAdminInsee != nil {
		return *m.ToAdminInsee
	}
	return ""
}

type StatInfoResponse struct {
	ObjectCount      *int32 `protobuf:"varint,1,opt,name=object_count" json:"object_count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StatInfoResponse) Reset()                    { *m = StatInfoResponse{} }
func (m *StatInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*StatInfoResponse) ProtoMessage()               {}
func (*StatInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *StatInfoResponse) GetObjectCount() int32 {
	if m != nil && m.ObjectCount != nil {
		return *m.ObjectCount
	}
	return 0
}

func init() {
	proto.RegisterType((*StatParameter)(nil), "pbnavitia.StatParameter")
	proto.RegisterType((*Filter)(nil), "pbnavitia.Filter")
	proto.RegisterType((*InterpretedParameter)(nil), "pbnavitia.InterpretedParameter")
	proto.RegisterType((*StatError)(nil), "pbnavitia.StatError")
	proto.RegisterType((*StatCoverage)(nil), "pbnavitia.StatCoverage")
	proto.RegisterType((*StatRequest)(nil), "pbnavitia.StatRequest")
	proto.RegisterType((*JourneyRequest)(nil), "pbnavitia.JourneyRequest")
	proto.RegisterType((*StatJourneyResponse)(nil), "pbnavitia.StatJourneyResponse")
	proto.RegisterType((*StatJourneySection)(nil), "pbnavitia.StatJourneySection")
	proto.RegisterType((*StatInfoResponse)(nil), "pbnavitia.StatInfoResponse")
}

func init() { proto.RegisterFile("stat.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1027 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x4b, 0x8f, 0xe3, 0x44,
	0x10, 0xd6, 0xe4, 0x31, 0x49, 0xca, 0xce, 0xcb, 0xc9, 0xcc, 0xf4, 0x3c, 0x16, 0x86, 0x70, 0x89,
	0x00, 0x0d, 0xab, 0xc0, 0x9d, 0xc3, 0x0a, 0xd0, 0x22, 0x0e, 0x68, 0x57, 0xe2, 0x6a, 0x75, 0xec,
	0xca, 0xa4, 0x77, 0x6c, 0xb7, 0xe9, 0xee, 0x64, 0x35, 0xfc, 0x35, 0xfe, 0x04, 0x67, 0x7e, 0x0a,
	0xa7, 0x55, 0x97, 0xdd, 0x8e, 0xe3, 0x9d, 0x91, 0xe6, 0x96, 0x7c, 0x55, 0x5f, 0x3d, 0xbf, 0xb2,
	0x0d, 0xa0, 0x0d, 0x37, 0x77, 0xb9, 0x92, 0x46, 0x06, 0x83, 0x7c, 0x9d, 0xf1, 0xbd, 0x30, 0x82,
	0x5f, 0x81, 0x79, 0xcc, 0xb1, 0x80, 0x17, 0xdf, 0xc2, 0xf0, 0xbd, 0xe1, 0xe6, 0x0f, 0xae, 0x78,
	0x8a, 0x06, 0x55, 0xe0, 0x41, 0xfb, 0x01, 0x1f, 0xd9, 0xc9, 0xed, 0xc9, 0x72, 0x10, 0x0c, 0xa1,
	0xbb, 0xe7, 0xc9, 0x0e, 0x59, 0xcb, 0xfe, 0x5d, 0xfc, 0x0e, 0xa7, 0xbf, 0x88, 0xc4, 0x7a, 0x8d,
	0xe0, 0x54, 0xae, 0x3f, 0x60, 0x64, 0x4a, 0xc7, 0x29, 0x0c, 0xb8, 0x31, 0x4a, 0xac, 0x77, 0xa6,
	0x74, 0x0e, 0x26, 0xd0, 0x97, 0x39, 0x2a, 0x6e, 0xa4, 0x62, 0xed, 0xe3, 0x68, 0x1d, 0x8a, 0xf6,
	0x27, 0xcc, 0xdf, 0x66, 0x06, 0x55, 0xae, 0xd0, 0x60, 0xfc, 0xa2, 0x0a, 0x82, 0x05, 0xf4, 0x36,
	0x54, 0x81, 0x66, 0xed, 0xdb, 0xf6, 0xd2, 0x5b, 0x4d, 0xef, 0xaa, 0xbe, 0xee, 0x8a, 0xda, 0x16,
	0x4b, 0x18, 0xd8, 0x96, 0x7e, 0x56, 0x4a, 0xaa, 0x00, 0xa0, 0x25, 0xe2, 0x32, 0xd6, 0x18, 0x7a,
	0x29, 0x6a, 0xcd, 0xef, 0x5d, 0x3f, 0x5f, 0x81, 0x6f, 0x3d, 0xdf, 0xc8, 0x3d, 0x2a, 0x7e, 0x8f,
	0xb6, 0x0b, 0x85, 0xf7, 0x42, 0x66, 0xa1, 0xe3, 0x2c, 0xfe, 0xef, 0x80, 0x67, 0x7d, 0xde, 0xe1,
	0x5f, 0x3b, 0xd4, 0x26, 0x98, 0x83, 0xaf, 0x8a, 0x9f, 0x61, 0xcc, 0x0d, 0x92, 0x57, 0xc7, 0x46,
	0xde, 0x69, 0x54, 0x96, 0x66, 0x23, 0x77, 0x6d, 0x24, 0x02, 0x32, 0x9e, 0x62, 0xd9, 0xfd, 0x39,
	0x8c, 0x78, 0x9e, 0x27, 0x22, 0xe2, 0xa6, 0xcc, 0xd0, 0x21, 0x57, 0x06, 0x93, 0x3a, 0x4e, 0x8c,
	0x2e, 0x31, 0x18, 0x4c, 0xaa, 0x5c, 0x3b, 0x45, 0x66, 0x76, 0x4a, 0x1c, 0x0f, 0xda, 0x3c, 0x17,
	0xac, 0x47, 0x6e, 0x3e, 0x74, 0x72, 0x6e, 0xb6, 0xac, 0xef, 0xfe, 0x6d, 0xa5, 0x36, 0x0c, 0xe8,
	0xdf, 0x19, 0x0c, 0x15, 0xea, 0x5c, 0x66, 0x1a, 0x43, 0x2d, 0xfe, 0x46, 0xe6, 0x11, 0x7f, 0x04,
	0xa7, 0x51, 0x22, 0x30, 0x33, 0xcc, 0x27, 0xb7, 0x6f, 0x60, 0x10, 0x95, 0x43, 0xd0, 0x6c, 0x48,
	0x83, 0xbd, 0xa8, 0x0d, 0xf6, 0x68, 0x48, 0xdf, 0x01, 0xe4, 0x6e, 0x57, 0x9a, 0x8d, 0xc8, 0x99,
	0x35, 0x9c, 0x0f, 0xcb, 0xfc, 0x1a, 0xba, 0x68, 0x17, 0xc1, 0xc6, 0xb7, 0x27, 0x4b, 0x6f, 0x35,
	0x6f, 0x38, 0x16, 0x4b, 0x7a, 0x0d, 0xfd, 0x0f, 0x72, 0xa7, 0x32, 0x7c, 0xd4, 0x6c, 0x42, 0x01,
	0xbf, 0x68, 0xf8, 0xfd, 0x56, 0x98, 0xdf, 0x95, 0xbd, 0x04, 0x3f, 0xc1, 0xb9, 0x38, 0x68, 0x27,
	0xac, 0x15, 0x34, 0x25, 0xfe, 0x97, 0x35, 0xfe, 0x93, 0x22, 0x5b, 0xc1, 0xb8, 0x4c, 0x19, 0x96,
	0x33, 0x66, 0x01, 0x55, 0x78, 0x59, 0x63, 0x56, 0x59, 0xab, 0xdd, 0x63, 0x16, 0x87, 0xb9, 0x14,
	0x99, 0xb1, 0xfb, 0x9b, 0xd1, 0x2c, 0xcf, 0x61, 0x74, 0x40, 0x69, 0x7b, 0x73, 0x9a, 0xe9, 0x0a,
	0x86, 0x22, 0xdb, 0xc8, 0xd0, 0xcd, 0x9f, 0x9d, 0x51, 0xfc, 0xeb, 0x46, 0x67, 0x6f, 0xb3, 0x8d,
	0xac, 0xda, 0x1a, 0x42, 0xd7, 0xc8, 0x07, 0xcc, 0xd8, 0x39, 0x89, 0xef, 0xbf, 0x13, 0x18, 0x35,
	0x6a, 0xb8, 0x86, 0x59, 0x59, 0x2f, 0xc6, 0xa4, 0xc0, 0xd0, 0x88, 0xd4, 0xca, 0xb0, 0xb5, 0xec,
	0x58, 0xd5, 0x45, 0x89, 0x8c, 0x1e, 0x3e, 0x0a, 0x6d, 0x25, 0xde, 0x5a, 0xf6, 0x83, 0x0b, 0x18,
	0xc7, 0x98, 0x73, 0x65, 0x76, 0x0a, 0x43, 0x91, 0x69, 0x74, 0x72, 0x3c, 0x32, 0xf0, 0x38, 0x15,
	0x59, 0x71, 0x96, 0x56, 0x32, 0x5c, 0x29, 0xb1, 0xe7, 0x49, 0xe9, 0xdf, 0x6d, 0xc2, 0x85, 0xf7,
	0x29, 0xc1, 0x37, 0x30, 0x6f, 0x84, 0x29, 0x66, 0x50, 0x48, 0xf3, 0x0a, 0x82, 0x23, 0x52, 0x61,
	0x23, 0xa1, 0x2e, 0xfe, 0xe9, 0xc0, 0xec, 0xa9, 0xd5, 0x3e, 0xdb, 0xa1, 0x3d, 0xb4, 0x6b, 0x98,
	0x1d, 0xd2, 0x1d, 0x8c, 0x2d, 0x32, 0x5e, 0xc2, 0xd4, 0x65, 0x3b, 0x98, 0xda, 0x64, 0x9a, 0x40,
	0xbf, 0x3a, 0xa1, 0xe2, 0xec, 0xe6, 0xe0, 0x67, 0xeb, 0xd0, 0x28, 0x9e, 0xe9, 0x8d, 0xd5, 0x4d,
	0x97, 0x50, 0x1f, 0x3a, 0xf6, 0xe1, 0x58, 0x36, 0xf7, 0x3d, 0xf4, 0x35, 0x46, 0x96, 0xa4, 0x59,
	0x8f, 0x74, 0xf5, 0xea, 0x69, 0x5d, 0xbe, 0x2f, 0xbc, 0x82, 0x19, 0x78, 0x1b, 0xa1, 0xb4, 0x09,
	0x73, 0x12, 0x48, 0xdf, 0x4d, 0xae, 0x02, 0xa9, 0xff, 0x01, 0xc1, 0x3f, 0xc2, 0xa8, 0x82, 0x23,
	0x29, 0x55, 0x4c, 0x27, 0xeb, 0xad, 0x6e, 0x6a, 0x29, 0x7e, 0x45, 0x79, 0xaf, 0x78, 0xbe, 0x15,
	0x11, 0x4f, 0xde, 0x58, 0x1f, 0xdb, 0x63, 0xc5, 0x2a, 0x46, 0x2a, 0x62, 0x3a, 0xea, 0x81, 0x9d,
	0x4d, 0xc3, 0x44, 0xd9, 0x7c, 0xb7, 0xa7, 0x26, 0x8f, 0x96, 0x3b, 0x24, 0x6b, 0x00, 0x90, 0xf0,
	0xaa, 0xec, 0x11, 0x61, 0x73, 0xf0, 0x1d, 0x46, 0x71, 0xc6, 0x84, 0xfe, 0x00, 0x43, 0x87, 0x16,
	0x45, 0x4f, 0x5e, 0x50, 0x34, 0x83, 0x89, 0x23, 0x55, 0x35, 0x4f, 0x9d, 0x40, 0x8e, 0x2d, 0x94,
	0x2a, 0x70, 0xfd, 0x34, 0x58, 0x54, 0xf1, 0x8c, 0xd4, 0xf3, 0x6f, 0x17, 0x82, 0x27, 0x16, 0xf0,
	0x8c, 0x3e, 0x4e, 0x9e, 0xd7, 0x47, 0xeb, 0x33, 0x7d, 0xb4, 0x8f, 0x94, 0xd0, 0x71, 0x4f, 0xd5,
	0x54, 0xc6, 0xee, 0x16, 0xae, 0x20, 0xd8, 0x28, 0x99, 0x86, 0x98, 0xae, 0x31, 0x8e, 0x31, 0x0e,
	0x6b, 0x9a, 0x19, 0x43, 0x8f, 0x6c, 0x22, 0x2e, 0x6f, 0x60, 0x0a, 0x03, 0x02, 0x0e, 0xd2, 0x0f,
	0x5e, 0x03, 0x10, 0x54, 0x4c, 0x70, 0xf0, 0x82, 0x09, 0x5a, 0x0d, 0x59, 0x46, 0x35, 0x3e, 0x70,
	0x47, 0x5c, 0x83, 0x29, 0x83, 0xe7, 0x5e, 0x1d, 0x46, 0x36, 0xea, 0xf3, 0xdd, 0x0b, 0xd5, 0x48,
	0x1b, 0x61, 0xe8, 0xca, 0x35, 0xb2, 0x60, 0x16, 0x6b, 0xbf, 0x83, 0xbe, 0x91, 0x65, 0x65, 0xe3,
	0x17, 0x54, 0x36, 0x03, 0xcf, 0xc8, 0x43, 0x5d, 0x13, 0x27, 0xf9, 0x0a, 0xa4, 0xd8, 0xd5, 0xb6,
	0xf7, 0xb8, 0x15, 0x51, 0x82, 0xa1, 0x7b, 0xf8, 0x8a, 0xb8, 0xdc, 0xf6, 0x18, 0x7a, 0x89, 0xc8,
	0xd0, 0x3d, 0x57, 0x69, 0x6e, 0x04, 0x44, 0x76, 0xee, 0x73, 0xf7, 0x49, 0xa1, 0xe4, 0xce, 0x90,
	0xd3, 0x99, 0x13, 0x6e, 0x86, 0xe6, 0xa3, 0x54, 0x0f, 0x16, 0x3b, 0x77, 0xc2, 0x75, 0x18, 0xe5,
	0xbe, 0x70, 0x13, 0xc9, 0xb7, 0x8f, 0xda, 0x16, 0x1e, 0xda, 0x55, 0x5a, 0x7f, 0xe6, 0xaa, 0x3a,
	0xb6, 0x10, 0xeb, 0xd2, 0xd9, 0x22, 0x99, 0xa6, 0xa8, 0x22, 0x51, 0xe3, 0x5d, 0xb9, 0x93, 0x6a,
	0xda, 0x88, 0x79, 0xed, 0xf2, 0xd5, 0x37, 0x46, 0xd2, 0xbd, 0x71, 0x1f, 0x02, 0x87, 0x89, 0x11,
	0xfe, 0x8a, 0x24, 0xbd, 0x84, 0xc9, 0x67, 0x2f, 0x84, 0x39, 0xf8, 0xc5, 0x77, 0x56, 0x18, 0xc9,
	0x5d, 0x56, 0x7c, 0x6d, 0x75, 0x3f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x94, 0xc7, 0xce, 0xd8,
	0x09, 0x00, 0x00,
}
